version: '3.8'

services:
  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    depends_on:
      - db
    ports:
      - "9000:9000"   # Web UI
      - "9092:9092"   # Internal communication
    environment:
      SONAR_JDBC_URL: ${SONAR_JDBC_URL}
      SONAR_JDBC_USERNAME: ${SONAR_JDBC_USERNAME}
      SONAR_JDBC_PASSWORD: ${SONAR_JDBC_PASSWORD}
      SONAR_WEB_JAVAADDITIONALOPTS: -Duser.timezone=${TZ}
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - sonar-network
    restart: unless-stopped

  db:
    image: postgres:13
    container_name: sonarqube_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - sonar-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Redis for caching (improves SonarQube performance)
  redis:
    image: redis:7-alpine
    container_name: sonarqube_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sonar-network
    restart: unless-stopped

  # Optional: Nginx reverse proxy for SSL/HTTPS
  nginx:
    image: nginx:alpine
    container_name: sonarqube_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - sonarqube
    networks:
      - sonar-network
    restart: unless-stopped

volumes:
  sonarqube_data:
    driver: local
  sonarqube_extensions:
    driver: local
  sonarqube_logs:
    driver: local
  postgresql_data:
    driver: local
  redis_data:
    driver: local

networks:
  sonar-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
